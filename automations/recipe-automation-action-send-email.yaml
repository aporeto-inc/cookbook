APIVersion: 1
label: recipe:automation-action:send-email
data:
  recipes:
    - name: Create a Send Email Automation Action
      description: Creates an automation action that creates an alarm and sends an email to the specified recipient(s).
      label: recipe:automation-action:send-email
      metadata:
        - "@aporeto:author=aporeto"
      associatedTags:
        - "aporeto:recipe:placement=automation-action"
      targetIdentities:
        - automationaction
      propagate: true
      longDescription: |-
        ### Create an automation action to create an alarm and send an email

        This recipe will create an automation action that will create an alarm
        and send an email to the specified recipient(s) with the details.

      template: |-
        {{`
        APIVersion: 1
        data:
          automationactions:
          - key: "@action:send_email_{{ .RenderID }}"
            name: Then create an alarm and send email(s) to {{ .Values.emails }}
            propagate: true
            description: Creates an alarm and sends an email to {{ .Values.emails }}
            entitlements:
              alarm:
              - create
            function: |-
              function then(m, params, payload) {
                if (!params.title) {
                    throw 'Parameter key "title" must be set';
                }
                if (!params.severity) {
                    throw 'Parameter key "severity" must be set';
                }
                if (!params.content) {
                    throw 'Parameter key "content" must be set';
                }

                var template = "<table style='display:flex;justify-content:center'><tbody>"
                Object
                  .entries(params.content)
                  .forEach(function([name, value]) {
                    template += "
                      <tr>" +
                        "<td style='vertical-align:top;padding-right:16px;color:rgb(112 112 112)'>" + name + ": </td>" +
                        "<td>" + value + "</td>
                      </tr>"
                    table += "
                      <tr>
                        <td style='vertical-align:top;padding-right:16px;color:rgb(112 112 112)'>Severity: </td>
                        <td>" + params.severity + "</td>
                      </tr>"
                  });
                template: += "</tbody></table>"

                var key = payload.id ? params.automation_id + "." + payload.id : params.automation_id

                m.Create('alarm', {
                    name: params.title,
                    emails: params.emails,
                    kind: 'automation.create_alarm.'+key,
                    severity: params.severity,
                    content: template,
                });
              }
            parameters:
              emails:
              {{- range $_, $email := .Values.emails }}
              - {{ $email | quote }}
              {{- end }}
            steps:
            - name: Parameters
              parameters:
              - name: Title
                key: title
                description: The title of the email to send
                type: String
              - name: Content
                key: content
                description: The content of the email to send
                type: String
              - name: Severity
                key: severity
                description: The severity of the message.
                type: Enum
                allowedChoices:
                  Low: Low
                  Medium: Medium
                  High: High
                  Critical: Critical
              - key: emails
                name: Emails
                description: The list of emails to be notified when the alarm is created
                type: StringSlice
                defaultValue:
                {{- range $_, $email := .Values.emails }}
                - {{ $email | quote }}
                {{- end }}
        `}}

      steps:
        - name: Parameters
          parameters:
            - key: emails
              name: Emails
              description: The list of emails to be notified when the alarm is created
              type: StringSlice
              validationFunction: |-
                function validate(emails) {
                  if (!emails.every(function (email) {
                    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
                  })) {
                    throw "Please enter a valid email address";
                  }
                }

APIVersion: 1
label: recipe:quickstart:linux
data:
  recipes:
    - name: Secure a Linux Service
      label: recipe:quickstart:linux
      options:
        appCrendentialFormat: JSON
      propagate: true
      metadata:
        - "@aporeto:audience=public"
      associatedTags:
        - "aporeto:placement=topnav"
      targetIdentities:
        - namespace
        - appcredential
        - hostservice
        - hostservicemappingpolicy
        - externalnetwork
        - networkaccesspolicy
      description: Secure a host with Aporeto Enforcerd.
      longDescription: |-

        ### Start onboarding your Linux VM

        Follow these steps to onboard an enforcerd in your Linux VM.

        #### Prerequisites

        Before diving into the steps, make sure you have:

        - A compatible distribution
        - Aporeto Repository added to your package manager

        Check out our complete documentation page about [Enforcerd installation on Linux](.Aporeto.junonUrl/docs/main/installation/install-on-linux/)

        #### Summary
        1. Define a [Namespace](.Aporeto.junonUrl/saas/concepts/#namespaces) that will store all your data in a single folder-like structure.

        _(See all Namespaces from the left menu under "Namespace Settings")_

        2. Define the protection of your VM and we will defined some **Host Services** for you.

        _(See all Host Services from the left menu under "Node")_

        3. Create an **AppCredential** that will be given to the enforcerd to register and discuss with the control plane.

        _(See all AppCredentials from the left menu under "Namespace Settings")_

        4. Install and start your enforcerd

        Click **Next** to go to the next step.

      template: |-
        {{`
        APIVersion: 1
        data:
          {{- if .Values.create_new_namespace }}
          namespaces:
          - name: {{ required ".Values.namespace_name is required" .Values.namespace_name }}
            description: {{ .Values.namespace_description }}
          {{- end}}
          appcredentials:
          - name: "{{ .Values.credentials_name }}"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            {{- end}}
            description: "{{ .Values.credentials_description }}"
            roles:
            - "@auth:role=enforcer"
          - name: "aporeto-operator"
            description: "credentials used by the aporeto-operator."
            roles:
            - "@auth:role=aporeto-operator"
          {{- if .Values.protection_entire_host }}
          hostservices:
          - name: "protection"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            {{- end}}
            description: "This host service protects the entire host."
            hostModeEnabled: true
            associatedTags:
            - "hs:name=protection"

          {{- if or .Values.protection_incoming_ssh .Values.protection_incoming_http .Values.protection_incoming_https }}
          - name: "services"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            {{- end}}
            description: "This host service defines services"
            hostModeEnabled: false
            associatedTags:
            - "hs:name=services"
            services:
            {{- if .Values.protection_incoming_ssh }}
            - "tcp/22"
            {{- end}}
            {{- if .Values.protection_incoming_http }}
            - "tcp/80"
            {{- end}}
            {{- if .Values.protection_incoming_https }}
            - "tcp/443"
            {{- end}}
          {{- end}}

          hostservicemappingpolicies:
          {{- if or .Values.protection_incoming_ssh .Values.protection_incoming_http .Values.protection_incoming_https }}
          - name: "All enforcers implement protection and services"
            description: "This policy has been created from the linux workflow"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "$identity=enforcer"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "hs:name=protection"
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "hs:name=services"
            {{- else}}
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "$identity=enforcer"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "hs:name=protection"
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "hs:name=services"
            {{- end}}
          {{- else }}
          - name: "All enforcers implement protection"
            description: "This policy has been created from the linux workflow"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "$identity=enforcer"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "hs:name=protection"
            {{- else}}
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "$identity=enforcer"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "hs:name=protection"
            {{- end}}
          {{- end}}

          externalnetworks:
          {{- if .Values.protection_outgoing_dns }}
          - name: "DNS (udp/53)"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            {{- end}}
            description: "This external network has been created from the linux workflow"
            entries:
            - "0.0.0.0/0"
            ports:
            - "53"
            protocols:
            - "udp"
            associatedTags:
            - "extnet:name=dns"
          {{- end}}
          {{- if .Values.protection_outgoing_tcp }}
          - name: "Internet (any TCP)"
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            {{- end}}
            description: "This external network has been created from the linux workflow"
            entries:
            - "0.0.0.0/0"
            ports:
            - "1:65535"
            protocols:
            - "tcp"
            associatedTags:
            - "extnet:name=internet"
          {{- end}}

          networkaccesspolicies:
          {{- if .Values.protection_outgoing_dns }}
          - name: "Allow traffic to DNS"
            description: "This policy has been created from the linux workflow"
            action: "Allow"
            logsEnabled: true
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "$identity=processingunit"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "extnet:name=dns"
            {{- else}}
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "$identity=processingunit"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "extnet:name=dns"
            {{- end}}
          {{- end}}
          {{- if .Values.protection_outgoing_tcp }}
          - name: "Allow traffic to Internet"
            description: "This policy has been created from the linux workflow"
            action: "Allow"
            logsEnabled: true
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "$identity=processingunit"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "extnet:name=internet"
            {{- else}}
            subject:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "$identity=processingunit"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}"
              - "extnet:name=internet"
            {{- end}}
          {{- end}}
          {{- if .Values.protection_incoming_ssh }}
          - name: "Allow incoming SSH access"
            description: "This policy has been created from the linux workflow"
            action: "Allow"
            logsEnabled: true
            {{- if .Values.create_new_namespace }}
            namespace: "{{ .Values.namespace_name }}"
            subject:
            - - "$name=Internet (any TCP)"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}/{{ .Values.namespace_name }}"
              - "hs:name=services"
            {{- else}}
            subject:
            - - "$name=Internet (any TCP)"
            object:
            - - "$namespace={{ .Aporeto.Namespace }}
              - "hs:name=services"
            {{- end}}
          {{- end}}

          {{- end }}
        `}}
      steps:
        - name: Namespace
          description: |-
            Define where the data will be created.
            You can either choose to use the current namespace **.Aporeto.junonUrl** or create a new one.

            Having a separate namespace allows you to give permissions to other users to access that specific namespace.

            Later, you will be able to delete this namespace which automatically delete all the related resources.

            ##### Read more about:

            - [Namespaces](.Aporeto.junonUrl/saas/concepts/#namespaces)
            - [Authentications and authorizations](.Aporeto.junonUrl/saas/concepts/#authentication)

            Clicking **Next** once you have defined your Aporeto namespace.

          parameters:
            - key: create_new_namespace
              name: Do you want to install data in the current namespace or in a child namespace ?
              description: Install this workflow in a new child namespace.
              type: Boolean
              defaultValue: false

            - key: namespace_name
              name: Namespace
              description: Define your namespace name.
              type: String
              defaultValue: quickstart
              visibilityCondition:
                - - key: create_new_namespace
                    operator: Equal
                    value: true

            - key: namespace_description
              name: Description
              description: Description of the namespace.
              type: String
              optional: true
              defaultValue: Namespace for quick start project
              visibilityCondition:
                - - key: create_new_namespace
                    operator: Equal
                    value: true

        - name: Protection
          description: |-

            ### Protect your Linux host

            Define how your VM should be protected. The default suggestion, will allow:

            * Enforcer to protect the entire host
            * Only SSH access is allowed to the VM
            * All outgoing traffic is allowed

            This step will define some host services based on your below choices.
            Click **Next** to continue.

          parameters:
            - key: protection_entire_host
              description: Protect the entire host.
              type: Boolean
              defaultValue: true
            - key: protection_incoming_ssh
              description: Allow incoming SSH traffic (tcp/22)
              type: Boolean
              defaultValue: true
            - key: protection_incoming_http
              description: Allow incoming HTTP traffic (tcp/80)
              type: Boolean
              defaultValue: false
            - key: protection_incoming_https
              description: Allow incoming HTTPS traffic (tcp/443)
              type: Boolean
              defaultValue: false
            - key: protection_outgoing_tcp
              description: Allow outgoing traffic on TCP (tcp/1:65535)
              type: Boolean
              defaultValue: true
            - key: protection_outgoing_dns
              description: Allow outgoing traffic for DNS resolution (udp/53)
              type: Boolean
              defaultValue: true

        - name: Credentials
          description: |-

            ### Define an app credential

            In this step, we will create an AppCredential for the enforcerd.

            #### What is an App Credential ?
            An App Credential is a yaml file that contains all the necessary information to connect to the platform.
            It has a specific role in the namespace it has been created.

            Read more about [App Credentials](.Aporeto.junonUrl/saas/reference/resources/app-cred/)

          parameters:
            - key: credentials_name
              name: Name
              description: Define your credential name.
              type: String
              defaultValue: enforcerd
            - key: credentials_description
              name: Description
              description: Description of the appcredentials.
              type: String
              optional: true
              defaultValue: AppCredential for the enforcerd on linux.

      successfullMessage: |-
        ### Start your enforcerd in Linux

        Use the AppCredential to start your enforcer.
        (See installation instructions from our [official documentation](.Aporeto.junonUrl/docs/main/installation/install-on-linux/))
